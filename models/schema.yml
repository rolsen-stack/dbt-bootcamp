version: 2

models:
  - name: dim_listings_cleansed
    description: Cleansed table which contains Airbnb listings

    columns: 
      - name: listing_id
        description: Primary key for the listings
        tests: 
          - not_null
      
      - name: host_id
        description: References the Hosts table
        tests:
          - relationships:
              to: ref('dim_hosts_cleansed')
              field: host_id
      
      - name: room_type
        description: Type listing rental
        tests:
          - accepted_values:
              values: ['Entire home/apt','Private room','Shared room','Hotel room']

      - name: minimum_nights
        description: '{{doc("dim_listing_cleansed_minimum_nights") }} '
        tests:
            - positive_value



  - name: dim_hosts_cleansed
    description: Cleaned table containing the Airbnb Hosts
    columns:
      - name: host_id
        description: Primary key; ID of the Airbnb host
        tests:
            - not_null
            - unique


      - name: host_name
        descriptoin: Name of the Airbnb host. Hosts with null value names are alias with "Anonymous"
        tests:
            - not_null


      - name: is_superhost
        description: True or False if the host is a superhost
        tests:
            - accepted_values:
                values: ['t', 'f']




  - name: dim_listings_w_hosts
    description: Table created from listings_cleaned left joined to hosts_cleaned views. 
    test:
        - dbt_expectations.expect_table_row_count_to_equal_other_table: 
            compare_model: source('airbnb', 'listings')
    columns:
      - name: price
        description: Validating prices are within business expections and no extreme values are entered, ie 1mil per night or $1
        tests:
            - dbt_expectations.expect_column_quantile_values_to_be_between:
                quantile: .99 
                min_value: 50
                max_value: 500
            - dbt_expectations.expect_column_max_to_be_between:
                max_value: 5000
                config:
                  severity: warn
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: number



  - name: fct_reviews
    description: '{{doc("fct_reviews_documentation")}}'
    columns:
      - name: review_id
        description: '{{doc("fct_reviews_review_id_doc")}}'
        tests:
            - not_null
      
      - name: listing_id
        description: Airbnb host property id number

      - name: review_date
        description: Timestamp when the review was created, assumption is UTC time
        tests:
            - not_null

      - name: review_text
        description: Raw string of Airbnb review
      
      - name: review_sentiment
        description: NLP classification model scans the review_text and creates a sentiment string. Test cases validate only contains ['negative', 'neutral', 'positive']
        tests:
            - accepted_values:
                values: ['negative', 'neutral', 'positive']


